// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trabalho_api.Data;

#nullable disable

namespace Trabalho_api.Migrations
{
    [DbContext(typeof(Trabalho_apiContext))]
    partial class Trabalho_apiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Trabalho_api.Models.Categoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("categoria");
                });

            modelBuilder.Entity("Trabalho_api.Models.Doacao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("categoriaid")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("enderecoid")
                        .HasColumnType("int");

                    b.Property<string>("file")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasMaxLength(4000);

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.Property<string>("situacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("vendedorid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("categoriaid");

                    b.HasIndex("enderecoid");

                    b.HasIndex("vendedorid");

                    b.ToTable("doacao");
                });

            modelBuilder.Entity("Trabalho_api.Models.Empresa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("enderecoid")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("razaoSocial")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("representanteid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("enderecoid");

                    b.HasIndex("representanteid");

                    b.ToTable("empresa");
                });

            modelBuilder.Entity("Trabalho_api.Models.Endereco", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("rua")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("uf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userid");

                    b.ToTable("endereco");
                });

            modelBuilder.Entity("Trabalho_api.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("file")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasMaxLength(4000);

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("Trabalho_api.Models.Doacao", b =>
                {
                    b.HasOne("Trabalho_api.Models.Categoria", "categoria")
                        .WithMany()
                        .HasForeignKey("categoriaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trabalho_api.Models.Endereco", "endereco")
                        .WithMany()
                        .HasForeignKey("enderecoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trabalho_api.Models.User", "vendedor")
                        .WithMany()
                        .HasForeignKey("vendedorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");

                    b.Navigation("endereco");

                    b.Navigation("vendedor");
                });

            modelBuilder.Entity("Trabalho_api.Models.Empresa", b =>
                {
                    b.HasOne("Trabalho_api.Models.Endereco", "endereco")
                        .WithMany()
                        .HasForeignKey("enderecoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trabalho_api.Models.User", "representante")
                        .WithMany()
                        .HasForeignKey("representanteid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("endereco");

                    b.Navigation("representante");
                });

            modelBuilder.Entity("Trabalho_api.Models.Endereco", b =>
                {
                    b.HasOne("Trabalho_api.Models.User", "user")
                        .WithMany("enderecos")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Trabalho_api.Models.User", b =>
                {
                    b.Navigation("enderecos");
                });
#pragma warning restore 612, 618
        }
    }
}
