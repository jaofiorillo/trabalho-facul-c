// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trabalho_api.Data;

#nullable disable

namespace Trabalho_api.Migrations
{
    [DbContext(typeof(Trabalho_apiContext))]
    partial class Trabalho_apiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Trabalho_api.Models.Endereco", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("rua")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("uf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userid");

                    b.ToTable("endereco");
                });

            modelBuilder.Entity("Trabalho_api.Models.Pedido", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Enderecoid")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("precoTotal")
                        .HasColumnType("float");

                    b.Property<int>("userCadastroid")
                        .HasColumnType("int");

                    b.Property<int>("userCompradorid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Enderecoid");

                    b.HasIndex("userCadastroid");

                    b.HasIndex("userCompradorid");

                    b.ToTable("pedido");
                });

            modelBuilder.Entity("Trabalho_api.Models.Produto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Pedidoid")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("preco")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("Pedidoid");

                    b.ToTable("produto");
                });

            modelBuilder.Entity("Trabalho_api.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("Trabalho_api.Models.Endereco", b =>
                {
                    b.HasOne("Trabalho_api.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Trabalho_api.Models.Pedido", b =>
                {
                    b.HasOne("Trabalho_api.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("Enderecoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trabalho_api.Models.User", "userCadastro")
                        .WithMany()
                        .HasForeignKey("userCadastroid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trabalho_api.Models.User", "userComprador")
                        .WithMany()
                        .HasForeignKey("userCompradorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("userCadastro");

                    b.Navigation("userComprador");
                });

            modelBuilder.Entity("Trabalho_api.Models.Produto", b =>
                {
                    b.HasOne("Trabalho_api.Models.Pedido", null)
                        .WithMany("Produtos")
                        .HasForeignKey("Pedidoid");
                });

            modelBuilder.Entity("Trabalho_api.Models.Pedido", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
